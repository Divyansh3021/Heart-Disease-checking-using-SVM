# -*- coding: utf-8 -*-
"""SVM.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d14lDOtykjcpQc1YZYyep6y8OGapLB29
"""

#importing the dependencies
import numpy as np
import pandas as pd
from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn import svm
from sklearn.metrics import accuracy_score

#data collection and analysis
dataset = pd.read_csv("/content/heart_disease_cleaned.csv")

dataset.head()

dataset.shape

dataset.describe()

dataset["HeartDisease"].value_counts()

dataset.groupby("HeartDisease").mean()

#seperating data and label
X = dataset.drop(columns=["HeartDisease","AgeCategory","Race"], axis=1)
Y = dataset["HeartDisease"]

scalar = StandardScaler()
scalar.fit(X)

std_data = scalar.transform(X)
print(std_data)

X = std_data

print(X)
 print(Y)

x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size=0.2, stratify = Y ,random_state = 2)

print(x_train.shape, x_test.shape, y_train.shape, y_test.shape)

classifier = svm.SVC(kernel = "linear")

#training the SVM
classifier.fit(x_train, y_train)

#model evaluation
train_prediction = classifier.predict(x_train)
train_acc = accuracy_score(train_prediction, y_train)
print("Training data accuracy= ", train_acc)

test_prediction = classifier.predict(x_test)
test_acc = accuracy_score(test_prediction, y_test)
print("Test data accuracy: ", test_acc)

#making a predictive system
raw_data = [0]
input_data = (22.87,1,0,0,1,15,0,0,0,1,3,8,0,0,0)

input_data = np.asarray(input_data)

#reshaping the data
reshaped_data = input_data.reshape(1, -1)

#standardise the data
std_data = scalar.transform(reshaped_data)
#print(std_data)

prediction = classifier.predict(std_data)
#predict_acc = accuracy_score(prediction,raw_data)
print(prediction)

